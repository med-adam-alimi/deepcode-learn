
[

  {
    "id": "c-1",
    "title": "Check Even or Odd",
    "short_description": "Return 'Even' if number is even, else 'Odd'.",
    "description": "Write a function that returns 'Even' for even integers and 'Odd' for odd integers.\n>>> checkEvenOdd(4)\n\"Even\"",
    "difficulty": "Easy",
    "tests": [
      {"input": "4", "output": "\"Even\""},
      {"input": "7", "output": "\"Odd\""},
      {"input": "0", "output": "\"Even\""},
      {"input": "-1", "output": "\"Odd\""},
      {"input": "100", "output": "\"Even\""},
      {"input": "101", "output": "\"Odd\""},
      {"input": "22", "output": "\"Even\""},
      {"input": "-22", "output": "\"Even\""},
      {"input": "-99", "output": "\"Odd\""},
      {"input": "1", "output": "\"Odd\""},
      {"input": "2", "output": "\"Even\""},
      {"input": "13", "output": "\"Odd\""}
    ]
  },
  {
    "id": "c-2",
    "title": "Calculate Factorial",
    "short_description": "Return factorial of a number.",
    "description": "Write a function to calculate factorial of a non-negative integer.\n>>> factorial(5)\n120",
    "difficulty": "Easy",
    "tests": [
      {"input": "5", "output": "120"},
      {"input": "0", "output": "1"},
      {"input": "1", "output": "1"},
      {"input": "3", "output": "6"},
      {"input": "7", "output": "5040"},
      {"input": "10", "output": "3628800"},
      {"input": "6", "output": "720"},
      {"input": "4", "output": "24"},
      {"input": "2", "output": "2"},
      {"input": "8", "output": "40320"},
      {"input": "9", "output": "362880"}
    ]
  },
  {
    "id": "c-3",
    "title": "Sum of Array Elements",
    "short_description": "Sum all integers in an array.",
    "description": "Return the sum of all elements in an integer array.\n>>> sumArray([1,2,3], 3)\n6",
    "difficulty": "Easy",
    "tests": [
      {"input": "[1,2,3], 3", "output": "6"},
      {"input": "[], 0", "output": "0"},
      {"input": "[10, -10, 20], 3", "output": "20"},
      {"input": "[5], 1", "output": "5"},
      {"input": "[0,0,0], 3", "output": "0"},
      {"input": "[-1,-2,-3], 3", "output": "-6"},
      {"input": "[100, 200, 300], 3", "output": "600"},
      {"input": "[7,8,9], 3", "output": "24"},
      {"input": "[1,1,1,1,1], 5", "output": "5"},
      {"input": "[50,50], 2", "output": "100"}
    ]
  },
  {
    "id": "c-4",
    "title": "Find Maximum",
    "short_description": "Return max value from array.",
    "description": "Given an integer array, return the maximum value.\n>>> maxValue([1,5,3], 3)\n5",
    "difficulty": "Easy",
    "tests": [
      {"input": "[1,5,3], 3", "output": "5"},
      {"input": "[-10, -5, -3], 3", "output": "-3"},
      {"input": "[0], 1", "output": "0"},
      {"input": "[100, 200, 50], 3", "output": "200"},
      {"input": "[1,1,1], 3", "output": "1"},
      {"input": "[7,8,9,10], 4", "output": "10"},
      {"input": "[-1,0,1], 3", "output": "1"},
      {"input": "[42], 1", "output": "42"},
      {"input": "[5,3,5], 3", "output": "5"},
      {"input": "[-2147483648, 0], 2", "output": "0"}
    ]
  },
  {
    "id": "c-5",
    "title": "Check Prime",
    "short_description": "Check if a number is prime.",
    "description": "Return 1 if the given integer is prime, 0 otherwise.\n>>> isPrime(7)\n1",
    "difficulty": "Easy",
    "tests": [
      {"input": "7", "output": "1"},
      {"input": "4", "output": "0"},
      {"input": "1", "output": "0"},
      {"input": "2", "output": "1"},
      {"input": "13", "output": "1"},
      {"input": "0", "output": "0"},
      {"input": "-3", "output": "0"},
      {"input": "29", "output": "1"},
      {"input": "100", "output": "0"},
      {"input": "97", "output": "1"}
    ]
  },
  {
    "id": "c-6",
    "title": "Count Vowels",
    "short_description": "Count vowels in a string.",
    "description": "Return the number of vowels (a, e, i, o, u) in a string.\n>>> countVowels(\"hello\")\n2",
    "difficulty": "Easy",
    "tests": [
      {"input": "\"hello\"", "output": "2"},
      {"input": "\"HELLO\"", "output": "2"},
      {"input": "\"bcdfg\"", "output": "0"},
      {"input": "\"aeiouAEIOU\"", "output": "10"},
      {"input": "\"\"", "output": "0"},
      {"input": "\"rhythm\"", "output": "0"},
      {"input": "\"Education\"", "output": "5"},
      {"input": "\"queue\"", "output": "4"},
      {"input": "\"apple\"", "output": "2"},
      {"input": "\"banana\"", "output": "3"}
    ]
  },
  {
    "id": "c-7",
    "title": "Reverse String",
    "short_description": "Reverse the input string.",
    "description": "Return the reversed version of the given string.\n>>> reverseString(\"hello\")\n\"olleh\"",
    "difficulty": "Easy",
    "tests": [
      {"input": "\"hello\"", "output": "\"olleh\""},
      {"input": "\"c programming\"", "output": "\"gnimmargorp c\""},
      {"input": "\"\"", "output": "\"\""},
      {"input": "\"a\"", "output": "\"a\""},
      {"input": "\"racecar\"", "output": "\"racecar\""},
      {"input": "\"12345\"", "output": "\"54321\""},
      {"input": "\"Test\"", "output": "\"tseT\""},
      {"input": "\"Palindrome\"", "output": "\"emordnilaP\""},
      {"input": "\"level\"", "output": "\"level\""},
      {"input": "\"   \"", "output": "\"   \""}
    ]
  },
  {
    "id": "c-8",
    "title": "Check Palindrome Number",
    "short_description": "Check if number is palindrome.",
    "description": "Determine if the given integer is a palindrome (reads the same backward and forward).\n>>> isPalindrome(121)\n1",
    "difficulty": "Easy",
    "tests": [
      {"input": "121", "output": "1"},
      {"input": "12321", "output": "1"},
      {"input": "10", "output": "0"},
      {"input": "1", "output": "1"},
      {"input": "123", "output": "0"},
      {"input": "0", "output": "1"},
      {"input": "999", "output": "1"},
      {"input": "1001", "output": "1"},
      {"input": "2002", "output": "1"},
      {"input": "23432", "output": "1"}
    ]
  },
  {
    "id": "c-9",
    "title": "Find GCD",
    "short_description": "Calculate greatest common divisor of two numbers.",
    "description": "Return the greatest common divisor of two integers.\n>>> gcd(48, 18)\n6",
    "difficulty": "Easy",
    "tests": [
      {"input": "48, 18", "output": "6"},
      {"input": "100, 25", "output": "25"},
      {"input": "17, 13", "output": "1"},
      {"input": "10, 0", "output": "10"},
      {"input": "0, 0", "output": "0"},
      {"input": "7, 7", "output": "7"},
      {"input": "56, 98", "output": "14"},
      {"input": "81, 27", "output": "27"},
      {"input": "14, 49", "output": "7"},
      {"input": "0, 15", "output": "15"}
    ]
  },
  {
    "id": "c-10",
    "title": "Count Words",
    "short_description": "Count the number of words in a string.",
    "description": "Return the count of words in a string separated by spaces.\n>>> countWords(\"Hello World\")\n2",
    "difficulty": "Easy",
    "tests": [
      {"input": "\"Hello World\"", "output": "2"},
      {"input": "\"\"", "output": "0"},
      {"input": "\"One\"", "output": "1"},
      {"input": "\"Count the number of words\"", "output": "6"},
      {"input": "\"Multiple   spaces\"", "output": "2"},
      {"input": "\"   Leading and trailing spaces   \"", "output": "4"},
      {"input": "\"A B C D\"", "output": "4"},
      {"input": "\"Word\"", "output": "1"},
      {"input": "\"Two words\"", "output": "2"},
      {"input": "\"New line\nseparated\"", "output": "2"}
    ]
  },
  {
    "id": "c-11",
    "title": "Remove Duplicates from Array",
    "short_description": "Remove duplicates from an integer array.",
    "description": "Return a new array with duplicates removed, preserving the original order.\n>>> removeDuplicates([1,2,2,3], 4)\n[1,2,3]",
    "difficulty": "Medium",
    "tests": [
      {"input": "[1,2,2,3], 4", "output": "[1,2,3]"},
      {"input": "[1,1,1,1], 4", "output": "[1]"},
      {"input": "[], 0", "output": "[]"},
      {"input": "[5,3,5,2,2], 5", "output": "[5,3,2]"},
      {"input": "[0,1,0,2], 4", "output": "[0,1,2]"},
      {"input": "[7,7,7,7], 4", "output": "[7]"},
      {"input": "[10,20,30], 3", "output": "[10,20,30]"},
      {"input": "[4,5,6,5,4], 5", "output": "[4,5,6]"},
      {"input": "[100], 1", "output": "[100]"},
      {"input": "[2,2,2,3,3,4], 6", "output": "[2,3,4]"}
    ]
  },
  {
    "id": "c-12",
    "title": "Find Duplicate Elements",
    "short_description": "Return duplicates from an array.",
    "description": "Return a list of elements that appear more than once in the input array.\n>>> findDuplicates([1,2,2,3,3,3], 6)\n[2,3]",
    "difficulty": "Medium",
    "tests": [
      {"input": "[1,2,2,3,3,3], 6", "output": "[2,3]"},
      {"input": "[1,1,1,1], 4", "output": "[1]"},
      {"input": "[1,2,3], 3", "output": "[]"},
      {"input": "[], 0", "output": "[]"},
      {"input": "[5,5,6,7,7,8], 6", "output": "[5,7]"},
      {"input": "[10,20,10,30,20], 5", "output": "[10,20]"},
      {"input": "[0,0,0,0,0], 5", "output": "[0]"},
      {"input": "[100,101,102], 3", "output": "[]"},
      {"input": "[1,2,2,2,3,4], 6", "output": "[2]"},
      {"input": "[5,4,3,2,1], 5", "output": "[]"},
      {"input": "[3,3,3,3], 4", "output": "[3]"}
    ]
  },
  {
    "id": "c-13",
    "title": "Fibonacci Sequence",
    "short_description": "Generate Fibonacci sequence up to n.",
    "description": "Return an array containing Fibonacci sequence numbers up to n (inclusive).\n>>> fibonacci(5)\n[0,1,1,2,3,5]",
    "difficulty": "Medium",
    "tests": [
      {"input": "5", "output": "[0,1,1,2,3,5]"},
      {"input": "0", "output": "[0]"},
      {"input": "1", "output": "[0,1,1]"},
      {"input": "10", "output": "[0,1,1,2,3,5,8]"},
      {"input": "15", "output": "[0,1,1,2,3,5,8,13]"},
      {"input": "2", "output": "[0,1,1,2]"},
      {"input": "3", "output": "[0,1,1,2,3]"},
      {"input": "20", "output": "[0,1,1,2,3,5,8,13]"}
    ]
  },
  {
    "id": "c-14",
    "title": "Find Max and Min in Array",
    "short_description": "Return max and min from array.",
    "description": "Given an integer array, return the maximum and minimum values as a pair.\n>>> maxMin([1,5,3], 3)\n(5,1)",
    "difficulty": "Medium",
    "tests": [
      {"input": "[1,5,3], 3", "output": "(5,1)"},
      {"input": "[-10, -5, -3], 3", "output": "(-3,-10)"},
      {"input": "[0], 1", "output": "(0,0)"},
      {"input": "[100, 200, 50], 3", "output": "(200,50)"},
      {"input": "[1,1,1], 3", "output": "(1,1)"},
      {"input": "[7,8,9,10], 4", "output": "(10,7)"},
      {"input": "[-1,0,1], 3", "output": "(1,-1)"},
      {"input": "[42], 1", "output": "(42,42)"},
      {"input": "[5,3,5], 3", "output": "(5,3)"},
      {"input": "[-2147483648, 0], 2", "output": "(0,-2147483648)"}
    ]
  },
  {
    "id": "c-15",
    "title": "Check Anagram",
    "short_description": "Determine if two strings are anagrams.",
    "description": "Return 1 if two strings are anagrams of each other, else 0.\n>>> isAnagram(\"listen\", \"silent\")\n1",
    "difficulty": "Medium",
    "tests": [
      {"input": "\"listen\", \"silent\"", "output": "1"},
      {"input": "\"hello\", \"world\"", "output": "0"},
      {"input": "\"evil\", \"vile\"", "output": "1"},
      {"input": "\"anagram\", \"nagaram\"", "output": "1"},
      {"input": "\"rat\", \"car\"", "output": "0"},
      {"input": "\"a\", \"a\"", "output": "1"},
      {"input": "\"\", \"\"", "output": "1"},
      {"input": "\"ab\", \"ba\"", "output": "1"},
      {"input": "\"abc\", \"cba\"", "output": "1"},
      {"input": "\"abcd\", \"dcba\"", "output": "1"}
    ]
  },
  {
    "id": "c-15",
    "title": "Check Anagram",
    "short_description": "Determine if two strings are anagrams.",
    "description": "Return 1 if two strings are anagrams of each other, else 0.\n>>> isAnagram(\"listen\", \"silent\")\n1",
    "difficulty": "Medium",
    "tests": [
      {"input": "\"listen\", \"silent\"", "output": "1"},
      {"input": "\"hello\", \"world\"", "output": "0"},
      {"input": "\"evil\", \"vile\"", "output": "1"},
      {"input": "\"anagram\", \"nagaram\"", "output": "1"},
      {"input": "\"rat\", \"car\"", "output": "0"},
      {"input": "\"a\", \"a\"", "output": "1"},
      {"input": "\"\", \"\"", "output": "1"},
      {"input": "\"ab\", \"ba\"", "output": "1"},
      {"input": "\"abc\", \"cba\"", "output": "1"},
      {"input": "\"abcd\", \"dcba\"", "output": "1"}
    ]
  },
  
  {
    "id": "c-16",
    "title": "Merge Sorted Arrays",
    "short_description": "Merge two sorted integer arrays.",
    "description": "Given two sorted integer arrays, merge them into one sorted array.\n>>> mergeSorted([1,3,5], [2,4,6], 3, 3)\n[1,2,3,4,5,6]",
    "difficulty": "Hard",
    "tests": [
        {"input": "[1,3,5], [2,4,6], 3, 3", "output": "[1,2,3,4,5,6]"},
        {"input": "[-1,-2,-3], [1,2,3], 3, 3", "output": "[-3,-2,-1,1,2,3]"},
        {"input": "[-1,-2,-3], [-4,-5,-6], 3, 3", "output": "[-6,-5,-4,-3,-2,-1]"},
        {"input": "[-1,-2,-3], [], 3, 0", "output": "[-3,-2,-1]"}
    ]
}

]